name: Vercel Deployment

env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

on:
  push:
    branches: ["main"]
  workflow_dispatch:

jobs:
  install-cache:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [22.x]
    steps:
      - name: Checkout Commit
        uses: actions/checkout@v3
      - name: Cache yarn dependencies
        uses: actions/cache@v2
        id: yarn-cache
        with:
          path: |
            node_modules
          key: ${{ runner.os }}-yarn-v1-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-v1
      - name: Install dependencies if cache invalid
        if: steps.yarn-cache.outputs.cache-hit != 'true'
        run: yarn

  build:
    runs-on: ubuntu-latest
    needs: install-cache
    strategy:
      matrix:
        node-version: [22.x]
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0 # Required to retrieve git history
      - uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      - name: Restore yarn dependencies
        uses: actions/cache@v2
        id: yarn-cache
        with:
          path: |
            node_modules
          key: ${{ runner.os }}-yarn-v1-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-v1

      - run: yarn build:server
      - run: yarn build:client

      - name: Move build files
        run: |
          mv trpc-client/dist dist
          mv trpc-server/dist dist/api
          mv trpc-server/api-vercel/index.js dist
          mv vercel.json dist

      - name: Install tree
        run: sudo apt-get install -y tree

      - name: Show project tree
        run: tree -L 4 -I 'node_modules'

  deploy:
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - uses: actions/checkout@v2
      - name: Install Vercel CLI
        run: yarn global add vercel@latest
        #remove start
      - name: Install tree
        run: sudo apt-get install -y tree

      - name: Show project tree
        run: tree -L 4 -I 'node_modules'
        #remove end
      - name: Deploy to vercel
        run: |
          if ${{github.ref_name == 'main'}};then
              vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}
              vercel build --prod --token=${{ secrets.VERCEL_TOKEN }}
              vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }}
          else
              vercel pull --yes --environment=preview --token=${{ secrets.VERCEL_TOKEN }}
              vercel build --token=${{ secrets.VERCEL_TOKEN }}
              vercel deploy --prebuilt --token=${{ secrets.VERCEL_TOKEN }}
          fi
